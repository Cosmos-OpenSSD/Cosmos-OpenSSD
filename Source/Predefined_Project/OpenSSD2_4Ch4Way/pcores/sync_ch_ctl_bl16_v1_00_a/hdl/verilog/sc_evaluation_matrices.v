//////////////////////////////////////////////////////////////////////////////////
// sc_evaluation_matrices.v for Cosmos OpenSSD
// Copyright (c) 2015 Hanyang University ENC Lab.
// Contributed by Ilyong Jung <iyjung@enc.hanyang.ac.kr>
//                Yong Ho Song <yhsong@enc.hanyang.ac.kr>
//
// This file is part of Cosmos OpenSSD.
//
// Cosmos OpenSSD is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// Cosmos OpenSSD is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Cosmos OpenSSD; see the file COPYING.
// If not, see <http://www.gnu.org/licenses/>. 
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
// Company: ENC Lab. <http://enc.hanyang.ac.kr>
// Engineer: Ilyong Jung <iyjung@enc.hanyang.ac.kr>
// 
// Project Name: Cosmos OpenSSD
// Design Name: BCH Decoder
// Module Name: sc_evaluation_matrix_***
// File Name: sc_evaluation_matrices.v
//
// Version: v1.0.2-2KB_T32
//
// Description: 
//   - evaluation matrix for BCH decoder: syndrome calculator (SC)
//   - for data area
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
// Revision History:
//
// * v1.0.2
//   - temporary roll-back for releasing
//   - coding style of this version is not unified
//
// * v1.0.1
//   - minor modification for releasing
//
// * v1.0.0
//   - first draft
//////////////////////////////////////////////////////////////////////////////////

`timescale 1ns / 1ps

	/////////////////////////////////////////////
	////////// GENERATED BY C PROGRAMA //////////
	/////
	///
	
	// This file was generated by C program.
	
	// total: 63
	
	                                          ///
	                                        /////	
	////////// GENERATED BY C PROGRAMA //////////
	/////////////////////////////////////////////

//module sc_evaluation_matrix_xxx(in, out); // xxx-th transpose of evaluation matrix
//    input wire[x:0] in; // port definition
//    output wire[x:0] out;
//    assign out[x] = in[x]; // re-connection
//endmodule

module sc_evaluation_matrix_001(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0];
    assign out[1] = in[1];
    assign out[2] = in[2];
    assign out[3] = in[3];
    assign out[4] = in[4];
    assign out[5] = in[5];
    assign out[6] = in[6];
    assign out[7] = in[7];
    assign out[8] = in[8];
    assign out[9] = in[9];
    assign out[10] = in[10];
    assign out[11] = in[11];
    assign out[12] = in[12];
    assign out[13] = in[13];
    assign out[14] = in[14];
endmodule

module sc_evaluation_matrix_002(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0];
    assign out[1] = in[8];
    assign out[2] = in[1] ^ in[8];
    assign out[3] = in[9];
    assign out[4] = in[2] ^ in[9];
    assign out[5] = in[10];
    assign out[6] = in[3] ^ in[10];
    assign out[7] = in[11];
    assign out[8] = in[4] ^ in[11];
    assign out[9] = in[12];
    assign out[10] = in[5] ^ in[12];
    assign out[11] = in[13];
    assign out[12] = in[6] ^ in[13];
    assign out[13] = in[14];
    assign out[14] = in[7] ^ in[14];
endmodule

module sc_evaluation_matrix_003(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[10];
    assign out[1] = in[5];
    assign out[2] = in[10];
    assign out[3] = in[1] ^ in[6] ^ in[11];
    assign out[4] = in[6];
    assign out[5] = in[11];
    assign out[6] = in[2] ^ in[7] ^ in[12];
    assign out[7] = in[7];
    assign out[8] = in[12];
    assign out[9] = in[3] ^ in[8] ^ in[13];
    assign out[10] = in[8];
    assign out[11] = in[13];
    assign out[12] = in[4] ^ in[9] ^ in[14];
    assign out[13] = in[9];
    assign out[14] = in[14];
endmodule

module sc_evaluation_matrix_004(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0];
    assign out[1] = in[4] ^ in[11];
    assign out[2] = in[4] ^ in[8] ^ in[11];
    assign out[3] = in[12];
    assign out[4] = in[1] ^ in[8] ^ in[12];
    assign out[5] = in[5] ^ in[12];
    assign out[6] = in[5] ^ in[9] ^ in[12];
    assign out[7] = in[13];
    assign out[8] = in[2] ^ in[9] ^ in[13];
    assign out[9] = in[6] ^ in[13];
    assign out[10] = in[6] ^ in[10] ^ in[13];
    assign out[11] = in[14];
    assign out[12] = in[3] ^ in[10] ^ in[14];
    assign out[13] = in[7] ^ in[14];
    assign out[14] = in[7] ^ in[11] ^ in[14];
endmodule

module sc_evaluation_matrix_005(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[3] ^ in[6] ^ in[9] ^ in[12];
    assign out[1] = in[3] ^ in[9];
    assign out[2] = in[6] ^ in[9];
    assign out[3] = in[9];
    assign out[4] = in[12];
    assign out[5] = in[1] ^ in[4] ^ in[7] ^ in[10] ^ in[13];
    assign out[6] = in[4] ^ in[10];
    assign out[7] = in[7] ^ in[10];
    assign out[8] = in[10];
    assign out[9] = in[13];
    assign out[10] = in[2] ^ in[5] ^ in[8] ^ in[11] ^ in[14];
    assign out[11] = in[5] ^ in[11];
    assign out[12] = in[8] ^ in[11];
    assign out[13] = in[11];
    assign out[14] = in[14];
endmodule

module sc_evaluation_matrix_006(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[10];
    assign out[1] = in[12];
    assign out[2] = in[5] ^ in[12];
    assign out[3] = in[3] ^ in[8] ^ in[13];
    assign out[4] = in[3] ^ in[8] ^ in[10] ^ in[13];
    assign out[5] = in[8];
    assign out[6] = in[1] ^ in[6] ^ in[8] ^ in[11];
    assign out[7] = in[13];
    assign out[8] = in[6] ^ in[13];
    assign out[9] = in[4] ^ in[9] ^ in[14];
    assign out[10] = in[4] ^ in[9] ^ in[11] ^ in[14];
    assign out[11] = in[9];
    assign out[12] = in[2] ^ in[7] ^ in[9] ^ in[12];
    assign out[13] = in[14];
    assign out[14] = in[7] ^ in[14];
endmodule

module sc_evaluation_matrix_007(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0];
    assign out[1] = in[13];
    assign out[2] = in[11];
    assign out[3] = in[9] ^ in[11] ^ in[13];
    assign out[4] = in[7];
    assign out[5] = in[5] ^ in[7] ^ in[13];
    assign out[6] = in[3] ^ in[7] ^ in[11];
    assign out[7] = in[1] ^ in[3] ^ in[5] ^ in[7] ^ in[9] ^ in[11] ^ in[13];
    assign out[8] = in[14];
    assign out[9] = in[12];
    assign out[10] = in[10] ^ in[12] ^ in[14];
    assign out[11] = in[8];
    assign out[12] = in[6] ^ in[8] ^ in[14];
    assign out[13] = in[4] ^ in[8] ^ in[12];
    assign out[14] = in[2] ^ in[4] ^ in[6] ^ in[8] ^ in[10] ^ in[12] ^ in[14];
endmodule

module sc_evaluation_matrix_008(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0];
    assign out[1] = in[2] ^ in[9] ^ in[13];
    assign out[2] = in[2] ^ in[4] ^ in[9] ^ in[11] ^ in[13];
    assign out[3] = in[6] ^ in[13];
    assign out[4] = in[4] ^ in[6] ^ in[8] ^ in[11] ^ in[13];
    assign out[5] = in[6] ^ in[10] ^ in[13];
    assign out[6] = in[6] ^ in[10] ^ in[12] ^ in[13];
    assign out[7] = in[14];
    assign out[8] = in[1] ^ in[8] ^ in[12] ^ in[14];
    assign out[9] = in[3] ^ in[10] ^ in[14];
    assign out[10] = in[3] ^ in[5] ^ in[10] ^ in[12] ^ in[14];
    assign out[11] = in[7] ^ in[14];
    assign out[12] = in[5] ^ in[7] ^ in[9] ^ in[12] ^ in[14];
    assign out[13] = in[7] ^ in[11] ^ in[14];
    assign out[14] = in[7] ^ in[11] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_009(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[10] ^ in[11] ^ in[13];
    assign out[1] = in[5] ^ in[8] ^ in[11];
    assign out[2] = in[5] ^ in[8] ^ in[10];
    assign out[3] = in[2] ^ in[5] ^ in[7] ^ in[12];
    assign out[4] = in[2] ^ in[10] ^ in[12];
    assign out[5] = in[12] ^ in[13];
    assign out[6] = in[4] ^ in[9] ^ in[10] ^ in[12] ^ in[14];
    assign out[7] = in[7] ^ in[9] ^ in[12];
    assign out[8] = in[4] ^ in[12];
    assign out[9] = in[1] ^ in[6] ^ in[11] ^ in[12];
    assign out[10] = in[6] ^ in[9] ^ in[12];
    assign out[11] = in[6] ^ in[9] ^ in[11];
    assign out[12] = in[3] ^ in[6] ^ in[8] ^ in[13];
    assign out[13] = in[3] ^ in[11] ^ in[13];
    assign out[14] = in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_010(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[3] ^ in[6] ^ in[9] ^ in[12];
    assign out[1] = in[10];
    assign out[2] = in[3] ^ in[9] ^ in[10];
    assign out[3] = in[13];
    assign out[4] = in[6] ^ in[9] ^ in[13];
    assign out[5] = in[2] ^ in[5] ^ in[8] ^ in[11] ^ in[14];
    assign out[6] = in[2] ^ in[5] ^ in[8] ^ in[9] ^ in[11] ^ in[14];
    assign out[7] = in[5] ^ in[11];
    assign out[8] = in[5] ^ in[11] ^ in[12];
    assign out[9] = in[8] ^ in[11];
    assign out[10] = in[1] ^ in[4] ^ in[7] ^ in[8] ^ in[10] ^ in[11] ^ in[13];
    assign out[11] = in[11];
    assign out[12] = in[4] ^ in[10] ^ in[11];
    assign out[13] = in[14];
    assign out[14] = in[7] ^ in[10] ^ in[14];
endmodule

module sc_evaluation_matrix_011(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[9];
    assign out[1] = in[4] ^ in[9] ^ in[11] ^ in[13];
    assign out[2] = in[4] ^ in[7] ^ in[8];
    assign out[3] = in[3] ^ in[7] ^ in[13];
    assign out[4] = in[8] ^ in[14];
    assign out[5] = in[3] ^ in[10] ^ in[12];
    assign out[6] = in[6] ^ in[7] ^ in[10] ^ in[12] ^ in[14];
    assign out[7] = in[2] ^ in[7] ^ in[10];
    assign out[8] = in[2] ^ in[10] ^ in[13];
    assign out[9] = in[9] ^ in[10] ^ in[11] ^ in[13];
    assign out[10] = in[5] ^ in[6] ^ in[10];
    assign out[11] = in[1] ^ in[5] ^ in[9] ^ in[10];
    assign out[12] = in[5] ^ in[10] ^ in[12] ^ in[14];
    assign out[13] = in[5] ^ in[8] ^ in[9];
    assign out[14] = in[4] ^ in[8] ^ in[14];
endmodule

module sc_evaluation_matrix_012(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[10];
    assign out[1] = in[6] ^ in[13];
    assign out[2] = in[6] ^ in[12] ^ in[13];
    assign out[3] = in[4] ^ in[9] ^ in[14];
    assign out[4] = in[4] ^ in[5] ^ in[9] ^ in[12] ^ in[14];
    assign out[5] = in[4] ^ in[9] ^ in[11] ^ in[14];
    assign out[6] = in[3] ^ in[4] ^ in[8] ^ in[9] ^ in[11] ^ in[13] ^ in[14];
    assign out[7] = in[9];
    assign out[8] = in[3] ^ in[8] ^ in[9] ^ in[10] ^ in[13];
    assign out[9] = in[2] ^ in[7] ^ in[9] ^ in[12];
    assign out[10] = in[2] ^ in[7] ^ in[8] ^ in[9] ^ in[12];
    assign out[11] = in[14];
    assign out[12] = in[1] ^ in[6] ^ in[8] ^ in[11] ^ in[14];
    assign out[13] = in[7] ^ in[14];
    assign out[14] = in[7] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_013(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[9] ^ in[13];
    assign out[1] = in[7] ^ in[8] ^ in[11] ^ in[12] ^ in[13];
    assign out[2] = in[8] ^ in[12] ^ in[14];
    assign out[3] = in[6] ^ in[7] ^ in[8] ^ in[10] ^ in[11];
    assign out[4] = in[6] ^ in[8] ^ in[10] ^ in[13];
    assign out[5] = in[5] ^ in[7] ^ in[8] ^ in[9] ^ in[13];
    assign out[6] = in[8] ^ in[12] ^ in[13] ^ in[14];
    assign out[7] = in[4] ^ in[6] ^ in[7] ^ in[13];
    assign out[8] = in[4] ^ in[6] ^ in[11] ^ in[12];
    assign out[9] = in[3] ^ in[4] ^ in[5] ^ in[11];
    assign out[10] = in[4] ^ in[10] ^ in[14];
    assign out[11] = in[2] ^ in[3];
    assign out[12] = in[2] ^ in[9] ^ in[13];
    assign out[13] = in[1] ^ in[9] ^ in[13];
    assign out[14] = in[8] ^ in[9] ^ in[12] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_014(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0];
    assign out[1] = in[14];
    assign out[2] = in[13] ^ in[14];
    assign out[3] = in[12];
    assign out[4] = in[11] ^ in[12];
    assign out[5] = in[10] ^ in[12] ^ in[14];
    assign out[6] = in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[7] = in[8];
    assign out[8] = in[7] ^ in[8];
    assign out[9] = in[6] ^ in[8] ^ in[14];
    assign out[10] = in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[13] ^ in[14];
    assign out[11] = in[4] ^ in[8] ^ in[12];
    assign out[12] = in[3] ^ in[4] ^ in[7] ^ in[8] ^ in[11] ^ in[12];
    assign out[13] = in[2] ^ in[4] ^ in[6] ^ in[8] ^ in[10] ^ in[12] ^ in[14];
    assign out[14] = in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_015(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[1] = in[1] ^ in[3] ^ in[5] ^ in[7] ^ in[9] ^ in[11] ^ in[13];
    assign out[2] = in[2] ^ in[3] ^ in[6] ^ in[7] ^ in[10] ^ in[11] ^ in[14];
    assign out[3] = in[3] ^ in[7] ^ in[11];
    assign out[4] = in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[12] ^ in[13] ^ in[14];
    assign out[5] = in[5] ^ in[7] ^ in[13];
    assign out[6] = in[6] ^ in[7] ^ in[14];
    assign out[7] = in[7];
    assign out[8] = in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[9] = in[9] ^ in[11] ^ in[13];
    assign out[10] = in[10] ^ in[11] ^ in[14];
    assign out[11] = in[11];
    assign out[12] = in[12] ^ in[13] ^ in[14];
    assign out[13] = in[13];
    assign out[14] = in[14];
endmodule

module sc_evaluation_matrix_016(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0];
    assign out[1] = in[1] ^ in[8] ^ in[12] ^ in[14];
    assign out[2] = in[1] ^ in[2] ^ in[8] ^ in[9] ^ in[12] ^ in[13] ^ in[14];
    assign out[3] = in[3] ^ in[10] ^ in[14];
    assign out[4] = in[2] ^ in[3] ^ in[4] ^ in[9] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[5] = in[3] ^ in[5] ^ in[10] ^ in[12] ^ in[14];
    assign out[6] = in[3] ^ in[5] ^ in[6] ^ in[10] ^ in[12] ^ in[13] ^ in[14];
    assign out[7] = in[7] ^ in[14];
    assign out[8] = in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[11] ^ in[13] ^ in[14];
    assign out[9] = in[5] ^ in[7] ^ in[9] ^ in[12] ^ in[14];
    assign out[10] = in[5] ^ in[6] ^ in[7] ^ in[9] ^ in[10] ^ in[12] ^ in[13] ^ in[14];
    assign out[11] = in[7] ^ in[11] ^ in[14];
    assign out[12] = in[6] ^ in[7] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[13] = in[7] ^ in[11] ^ in[13] ^ in[14];
    assign out[14] = in[7] ^ in[11] ^ in[13];
endmodule

module sc_evaluation_matrix_017(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[7] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[1] = in[5] ^ in[6] ^ in[8] ^ in[11] ^ in[13];
    assign out[2] = in[1] ^ in[6] ^ in[8] ^ in[10] ^ in[12] ^ in[13];
    assign out[3] = in[1] ^ in[6] ^ in[9] ^ in[13];
    assign out[4] = in[2] ^ in[6] ^ in[11] ^ in[12] ^ in[13];
    assign out[5] = in[9] ^ in[10] ^ in[11] ^ in[13];
    assign out[6] = in[2] ^ in[3] ^ in[10] ^ in[12] ^ in[13];
    assign out[7] = in[3] ^ in[7] ^ in[10] ^ in[11] ^ in[13];
    assign out[8] = in[3] ^ in[4] ^ in[10] ^ in[12] ^ in[13];
    assign out[9] = in[3] ^ in[8] ^ in[12] ^ in[13];
    assign out[10] = in[5] ^ in[8] ^ in[12] ^ in[13];
    assign out[11] = in[5] ^ in[9] ^ in[11];
    assign out[12] = in[4] ^ in[6];
    assign out[13] = in[9] ^ in[10] ^ in[12] ^ in[13] ^ in[14];
    assign out[14] = in[5] ^ in[6] ^ in[7] ^ in[10] ^ in[12];
endmodule

module sc_evaluation_matrix_018(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[10] ^ in[11] ^ in[13];
    assign out[1] = in[4] ^ in[12];
    assign out[2] = in[4] ^ in[5] ^ in[8] ^ in[11] ^ in[12];
    assign out[3] = in[1] ^ in[6] ^ in[11] ^ in[12];
    assign out[4] = in[1] ^ in[5] ^ in[6] ^ in[8] ^ in[10] ^ in[11] ^ in[12];
    assign out[5] = in[6] ^ in[9] ^ in[12];
    assign out[6] = in[2] ^ in[5] ^ in[6] ^ in[7] ^ in[9];
    assign out[7] = in[6] ^ in[9] ^ in[11];
    assign out[8] = in[2] ^ in[6] ^ in[9] ^ in[10] ^ in[11] ^ in[12];
    assign out[9] = in[3] ^ in[6] ^ in[8] ^ in[13];
    assign out[10] = in[3] ^ in[6] ^ in[8] ^ in[12];
    assign out[11] = in[3] ^ in[11] ^ in[13];
    assign out[12] = in[3] ^ in[4] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[13] = in[13] ^ in[14];
    assign out[14] = in[7] ^ in[9] ^ in[12] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_019(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[3] ^ in[6] ^ in[9] ^ in[11] ^ in[12];
    assign out[1] = in[3] ^ in[4] ^ in[11];
    assign out[2] = in[4] ^ in[6] ^ in[8];
    assign out[3] = in[9] ^ in[10] ^ in[11] ^ in[12];
    assign out[4] = in[1] ^ in[8] ^ in[10];
    assign out[5] = in[1] ^ in[4] ^ in[5] ^ in[11] ^ in[12];
    assign out[6] = in[4] ^ in[7] ^ in[9] ^ in[12];
    assign out[7] = in[5] ^ in[7] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13];
    assign out[8] = in[2] ^ in[9] ^ in[10] ^ in[12] ^ in[13];
    assign out[9] = in[5] ^ in[6] ^ in[9] ^ in[11] ^ in[12] ^ in[13];
    assign out[10] = in[2] ^ in[6] ^ in[8] ^ in[10] ^ in[12];
    assign out[11] = in[5] ^ in[6] ^ in[11] ^ in[12] ^ in[14];
    assign out[12] = in[3] ^ in[6] ^ in[8] ^ in[12];
    assign out[13] = in[3] ^ in[6] ^ in[7] ^ in[11] ^ in[12];
    assign out[14] = in[3] ^ in[6] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[14];
endmodule

module sc_evaluation_matrix_020(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[3] ^ in[6] ^ in[9] ^ in[12];
    assign out[1] = in[5] ^ in[11] ^ in[12];
    assign out[2] = in[5] ^ in[10] ^ in[11] ^ in[12];
    assign out[3] = in[8] ^ in[11];
    assign out[4] = in[3] ^ in[8] ^ in[9] ^ in[10] ^ in[11];
    assign out[5] = in[1] ^ in[4] ^ in[7] ^ in[8] ^ in[10] ^ in[11] ^ in[13];
    assign out[6] = in[1] ^ in[4] ^ in[7] ^ in[8] ^ in[10] ^ in[11];
    assign out[7] = in[11];
    assign out[8] = in[6] ^ in[9] ^ in[11] ^ in[13];
    assign out[9] = in[4] ^ in[10] ^ in[11];
    assign out[10] = in[2] ^ in[4] ^ in[5] ^ in[8] ^ in[10] ^ in[14];
    assign out[11] = in[14];
    assign out[12] = in[2] ^ in[5] ^ in[8] ^ in[9] ^ in[11];
    assign out[13] = in[7] ^ in[10] ^ in[14];
    assign out[14] = in[5] ^ in[7] ^ in[10] ^ in[11] ^ in[14];
endmodule

module sc_evaluation_matrix_021(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[10] ^ in[11];
    assign out[1] = in[5];
    assign out[2] = in[5] ^ in[9] ^ in[10];
    assign out[3] = in[3] ^ in[5] ^ in[8] ^ in[9] ^ in[13];
    assign out[4] = in[5] ^ in[8] ^ in[10] ^ in[13];
    assign out[5] = in[5] ^ in[7] ^ in[8];
    assign out[6] = in[1] ^ in[5] ^ in[6] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[13];
    assign out[7] = in[1] ^ in[3] ^ in[5] ^ in[7] ^ in[9] ^ in[13];
    assign out[8] = in[10] ^ in[11];
    assign out[9] = in[4] ^ in[9] ^ in[11] ^ in[14];
    assign out[10] = in[4] ^ in[10] ^ in[11];
    assign out[11] = in[8] ^ in[11] ^ in[14];
    assign out[12] = in[2] ^ in[7] ^ in[8] ^ in[10] ^ in[11] ^ in[12] ^ in[14];
    assign out[13] = in[4] ^ in[7] ^ in[8] ^ in[9] ^ in[11] ^ in[12];
    assign out[14] = in[2] ^ in[4] ^ in[6] ^ in[8] ^ in[10] ^ in[11] ^ in[12] ^ in[14];
endmodule

module sc_evaluation_matrix_022(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[9];
    assign out[1] = in[2] ^ in[10] ^ in[13];
    assign out[2] = in[2] ^ in[4] ^ in[9] ^ in[10] ^ in[11];
    assign out[3] = in[9] ^ in[10] ^ in[11] ^ in[13];
    assign out[4] = in[4] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[13];
    assign out[5] = in[5] ^ in[6] ^ in[10];
    assign out[6] = in[3] ^ in[5] ^ in[6] ^ in[7] ^ in[10] ^ in[13];
    assign out[7] = in[1] ^ in[5] ^ in[9] ^ in[10];
    assign out[8] = in[1] ^ in[5] ^ in[8] ^ in[9] ^ in[10] ^ in[14];
    assign out[9] = in[5] ^ in[10] ^ in[12] ^ in[14];
    assign out[10] = in[3] ^ in[5] ^ in[14];
    assign out[11] = in[5] ^ in[8] ^ in[9];
    assign out[12] = in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[12] ^ in[14];
    assign out[13] = in[4] ^ in[8] ^ in[14];
    assign out[14] = in[2] ^ in[4] ^ in[7] ^ in[8] ^ in[10] ^ in[14];
endmodule

module sc_evaluation_matrix_023(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[10] ^ in[11];
    assign out[1] = in[2] ^ in[8] ^ in[9] ^ in[11] ^ in[13];
    assign out[2] = in[2] ^ in[4] ^ in[8];
    assign out[3] = in[2] ^ in[5] ^ in[6] ^ in[9] ^ in[13];
    assign out[4] = in[2] ^ in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[13];
    assign out[5] = in[7] ^ in[9] ^ in[10] ^ in[13];
    assign out[6] = in[4] ^ in[7] ^ in[12];
    assign out[7] = in[7] ^ in[9] ^ in[10] ^ in[12] ^ in[14];
    assign out[8] = in[1] ^ in[4] ^ in[8] ^ in[10];
    assign out[9] = in[1] ^ in[3] ^ in[9] ^ in[10] ^ in[12];
    assign out[10] = in[5] ^ in[10] ^ in[12] ^ in[14];
    assign out[11] = in[5] ^ in[6] ^ in[7] ^ in[9] ^ in[10] ^ in[14];
    assign out[12] = in[5] ^ in[6] ^ in[8] ^ in[9] ^ in[10];
    assign out[13] = in[3] ^ in[5] ^ in[7] ^ in[9] ^ in[10] ^ in[11];
    assign out[14] = in[5] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_024(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[10];
    assign out[1] = in[3] ^ in[8] ^ in[9] ^ in[10] ^ in[13];
    assign out[2] = in[3] ^ in[6] ^ in[8] ^ in[9] ^ in[10];
    assign out[3] = in[2] ^ in[7] ^ in[9] ^ in[12];
    assign out[4] = in[2] ^ in[6] ^ in[7] ^ in[9] ^ in[13];
    assign out[5] = in[2] ^ in[7] ^ in[8] ^ in[9] ^ in[12];
    assign out[6] = in[2] ^ in[4] ^ in[7] ^ in[8] ^ in[12] ^ in[14];
    assign out[7] = in[14];
    assign out[8] = in[4] ^ in[5] ^ in[9] ^ in[12];
    assign out[9] = in[1] ^ in[6] ^ in[8] ^ in[11] ^ in[14];
    assign out[10] = in[1] ^ in[4] ^ in[6] ^ in[8] ^ in[9];
    assign out[11] = in[7] ^ in[14];
    assign out[12] = in[3] ^ in[4] ^ in[7] ^ in[8] ^ in[9] ^ in[11] ^ in[13];
    assign out[13] = in[7] ^ in[13] ^ in[14];
    assign out[14] = in[7] ^ in[9] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_025(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[3] ^ in[6] ^ in[12];
    assign out[1] = in[3] ^ in[4] ^ in[12];
    assign out[2] = in[4] ^ in[6] ^ in[8] ^ in[9] ^ in[12] ^ in[13];
    assign out[3] = in[7] ^ in[9] ^ in[13];
    assign out[4] = in[3] ^ in[8] ^ in[9] ^ in[12];
    assign out[5] = in[2] ^ in[3] ^ in[5] ^ in[8] ^ in[9] ^ in[11] ^ in[12] ^ in[14];
    assign out[6] = in[2] ^ in[8] ^ in[9] ^ in[11] ^ in[12];
    assign out[7] = in[2] ^ in[7] ^ in[9] ^ in[14];
    assign out[8] = in[2] ^ in[6] ^ in[9] ^ in[11] ^ in[14];
    assign out[9] = in[8] ^ in[9] ^ in[11] ^ in[14];
    assign out[10] = in[1] ^ in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[13] ^ in[14];
    assign out[11] = in[1] ^ in[7] ^ in[9] ^ in[10] ^ in[14];
    assign out[12] = in[4] ^ in[7] ^ in[9] ^ in[10] ^ in[14];
    assign out[13] = in[5] ^ in[7] ^ in[8] ^ in[9] ^ in[13];
    assign out[14] = in[4] ^ in[8] ^ in[9] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_026(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[9] ^ in[13];
    assign out[1] = in[4] ^ in[6] ^ in[11] ^ in[12];
    assign out[2] = in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[13];
    assign out[3] = in[3] ^ in[4] ^ in[5] ^ in[11];
    assign out[4] = in[3] ^ in[4] ^ in[5] ^ in[8] ^ in[11] ^ in[12] ^ in[14];
    assign out[5] = in[4] ^ in[10] ^ in[14];
    assign out[6] = in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[11] ^ in[14];
    assign out[7] = in[2] ^ in[3];
    assign out[8] = in[2] ^ in[3] ^ in[6] ^ in[8] ^ in[10] ^ in[13];
    assign out[9] = in[2] ^ in[9] ^ in[13];
    assign out[10] = in[2] ^ in[5] ^ in[7] ^ in[8];
    assign out[11] = in[1] ^ in[9] ^ in[13];
    assign out[12] = in[1] ^ in[8] ^ in[9] ^ in[12] ^ in[14];
    assign out[13] = in[8] ^ in[9] ^ in[12] ^ in[13] ^ in[14];
    assign out[14] = in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[12] ^ in[14];
endmodule

module sc_evaluation_matrix_027(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[10] ^ in[11] ^ in[13];
    assign out[1] = in[5] ^ in[8] ^ in[10] ^ in[11] ^ in[12] ^ in[13];
    assign out[2] = in[7] ^ in[8] ^ in[11] ^ in[12];
    assign out[3] = in[4] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[14];
    assign out[4] = in[4] ^ in[8] ^ in[9] ^ in[10];
    assign out[5] = in[4] ^ in[6] ^ in[8] ^ in[9];
    assign out[6] = in[3] ^ in[4] ^ in[6] ^ in[7] ^ in[13] ^ in[14];
    assign out[7] = in[3] ^ in[4] ^ in[6] ^ in[7];
    assign out[8] = in[4] ^ in[5] ^ in[6] ^ in[8] ^ in[13];
    assign out[9] = in[2] ^ in[4] ^ in[5] ^ in[7] ^ in[12] ^ in[13];
    assign out[10] = in[2] ^ in[3] ^ in[4] ^ in[8] ^ in[13];
    assign out[11] = in[2] ^ in[3] ^ in[13] ^ in[14];
    assign out[12] = in[1] ^ in[2] ^ in[6] ^ in[8] ^ in[11] ^ in[12] ^ in[13];
    assign out[13] = in[1] ^ in[7] ^ in[12] ^ in[13];
    assign out[14] = in[6] ^ in[8] ^ in[11] ^ in[14];
endmodule

module sc_evaluation_matrix_028(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0];
    assign out[1] = in[7] ^ in[8];
    assign out[2] = in[7] ^ in[8] ^ in[14];
    assign out[3] = in[6] ^ in[8] ^ in[14];
    assign out[4] = in[6] ^ in[8] ^ in[13];
    assign out[5] = in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[13] ^ in[14];
    assign out[6] = in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[12] ^ in[13] ^ in[14];
    assign out[7] = in[4] ^ in[8] ^ in[12];
    assign out[8] = in[4] ^ in[8] ^ in[11];
    assign out[9] = in[3] ^ in[4] ^ in[7] ^ in[8] ^ in[11] ^ in[12];
    assign out[10] = in[3] ^ in[4] ^ in[7] ^ in[8] ^ in[10] ^ in[11] ^ in[14];
    assign out[11] = in[2] ^ in[4] ^ in[6] ^ in[8] ^ in[10] ^ in[12] ^ in[14];
    assign out[12] = in[2] ^ in[4] ^ in[6] ^ in[8] ^ in[9] ^ in[11] ^ in[13];
    assign out[13] = in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[14] = in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_029(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[1] ^ in[2] ^ in[4] ^ in[8];
    assign out[1] = in[1] ^ in[3] ^ in[7] ^ in[14];
    assign out[2] = in[2] ^ in[6] ^ in[13];
    assign out[3] = in[3] ^ in[5] ^ in[7] ^ in[12] ^ in[14];
    assign out[4] = in[4] ^ in[11] ^ in[14];
    assign out[5] = in[5] ^ in[7] ^ in[10] ^ in[12] ^ in[13];
    assign out[6] = in[6] ^ in[9] ^ in[12] ^ in[14];
    assign out[7] = in[7] ^ in[8] ^ in[10] ^ in[11] ^ in[12];
    assign out[8] = in[7] ^ in[10] ^ in[11] ^ in[12];
    assign out[9] = in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[12] ^ in[14];
    assign out[10] = in[5] ^ in[6] ^ in[8] ^ in[10] ^ in[12] ^ in[13];
    assign out[11] = in[4] ^ in[5] ^ in[6] ^ in[8] ^ in[11] ^ in[14];
    assign out[12] = in[3] ^ in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[12] ^ in[14];
    assign out[13] = in[2] ^ in[3] ^ in[4] ^ in[7] ^ in[8] ^ in[13];
    assign out[14] = in[1] ^ in[2] ^ in[4] ^ in[8] ^ in[14];
endmodule

module sc_evaluation_matrix_030(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[1] = in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[2] = in[1] ^ in[3] ^ in[5] ^ in[7] ^ in[8] ^ in[10] ^ in[12] ^ in[14];
    assign out[3] = in[9] ^ in[11] ^ in[13];
    assign out[4] = in[2] ^ in[3] ^ in[6] ^ in[7] ^ in[9] ^ in[10] ^ in[13] ^ in[14];
    assign out[5] = in[10] ^ in[11] ^ in[14];
    assign out[6] = in[3] ^ in[7] ^ in[10] ^ in[14];
    assign out[7] = in[11];
    assign out[8] = in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[9] = in[12] ^ in[13] ^ in[14];
    assign out[10] = in[5] ^ in[7] ^ in[12] ^ in[14];
    assign out[11] = in[13];
    assign out[12] = in[6] ^ in[7] ^ in[13] ^ in[14];
    assign out[13] = in[14];
    assign out[14] = in[7] ^ in[14];
endmodule

module sc_evaluation_matrix_031(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[7] ^ in[10] ^ in[14];
    assign out[1] = in[1] ^ in[5] ^ in[7] ^ in[11] ^ in[13];
    assign out[2] = in[2] ^ in[7] ^ in[10] ^ in[11] ^ in[14];
    assign out[3] = in[1] ^ in[3] ^ in[6] ^ in[7] ^ in[11] ^ in[13] ^ in[14];
    assign out[4] = in[4] ^ in[6] ^ in[7];
    assign out[5] = in[3] ^ in[5] ^ in[7] ^ in[11] ^ in[12];
    assign out[6] = in[2] ^ in[6] ^ in[7] ^ in[13] ^ in[14];
    assign out[7] = in[3] ^ in[5] ^ in[14];
    assign out[8] = in[8] ^ in[12] ^ in[13];
    assign out[9] = in[3] ^ in[7] ^ in[8] ^ in[9] ^ in[13];
    assign out[10] = in[6] ^ in[8] ^ in[9] ^ in[10] ^ in[14];
    assign out[11] = in[7] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[12] = in[4] ^ in[9] ^ in[10] ^ in[11] ^ in[12];
    assign out[13] = in[5] ^ in[7] ^ in[9] ^ in[12] ^ in[13];
    assign out[14] = in[6] ^ in[10] ^ in[11] ^ in[12] ^ in[13];
endmodule

module sc_evaluation_matrix_032(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0];
    assign out[1] = in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[11] ^ in[13] ^ in[14];
    assign out[2] = in[1] ^ in[4] ^ in[6] ^ in[7] ^ in[11] ^ in[12] ^ in[13];
    assign out[3] = in[5] ^ in[7] ^ in[9] ^ in[12] ^ in[14];
    assign out[4] = in[1] ^ in[2] ^ in[5] ^ in[7] ^ in[8] ^ in[13];
    assign out[5] = in[5] ^ in[6] ^ in[7] ^ in[9] ^ in[10] ^ in[12] ^ in[13] ^ in[14];
    assign out[6] = in[3] ^ in[5] ^ in[6] ^ in[7] ^ in[9] ^ in[12] ^ in[13];
    assign out[7] = in[7] ^ in[11] ^ in[14];
    assign out[8] = in[2] ^ in[3] ^ in[4] ^ in[7] ^ in[9] ^ in[10] ^ in[13];
    assign out[9] = in[6] ^ in[7] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[10] = in[3] ^ in[5] ^ in[6] ^ in[7] ^ in[11] ^ in[13];
    assign out[11] = in[7] ^ in[11] ^ in[13] ^ in[14];
    assign out[12] = in[3] ^ in[5] ^ in[6] ^ in[7] ^ in[10] ^ in[11] ^ in[12];
    assign out[13] = in[7] ^ in[11] ^ in[13];
    assign out[14] = in[11] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_033(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[3] ^ in[5] ^ in[6] ^ in[7] ^ in[9] ^ in[10] ^ in[12] ^ in[13] ^ in[14];
    assign out[1] = in[3] ^ in[5] ^ in[9] ^ in[10] ^ in[12] ^ in[13] ^ in[14];
    assign out[2] = in[5] ^ in[6] ^ in[9] ^ in[12] ^ in[13] ^ in[14];
    assign out[3] = in[1] ^ in[5] ^ in[6] ^ in[9] ^ in[10] ^ in[11] ^ in[14];
    assign out[4] = in[6] ^ in[11] ^ in[12] ^ in[14];
    assign out[5] = in[1] ^ in[4] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[6] = in[2] ^ in[4] ^ in[7] ^ in[12] ^ in[13] ^ in[14];
    assign out[7] = in[6] ^ in[10] ^ in[12] ^ in[14];
    assign out[8] = in[5] ^ in[6] ^ in[7] ^ in[10] ^ in[14];
    assign out[9] = in[3] ^ in[5] ^ in[7] ^ in[8] ^ in[12] ^ in[14];
    assign out[10] = in[2] ^ in[5] ^ in[7] ^ in[12] ^ in[13] ^ in[14];
    assign out[11] = in[3] ^ in[5] ^ in[6] ^ in[7] ^ in[11] ^ in[13] ^ in[14];
    assign out[12] = in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[11];
    assign out[13] = in[3] ^ in[7] ^ in[11] ^ in[13] ^ in[14];
    assign out[14] = in[7] ^ in[9] ^ in[12] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_034(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[7] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[1] = in[3] ^ in[4] ^ in[10] ^ in[12] ^ in[13];
    assign out[2] = in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[8] ^ in[10] ^ in[11] ^ in[12];
    assign out[3] = in[3] ^ in[8] ^ in[12] ^ in[13];
    assign out[4] = in[1] ^ in[3] ^ in[6] ^ in[10];
    assign out[5] = in[5] ^ in[8] ^ in[12] ^ in[13];
    assign out[6] = in[1] ^ in[5] ^ in[6] ^ in[8] ^ in[9] ^ in[12];
    assign out[7] = in[5] ^ in[9] ^ in[11];
    assign out[8] = in[2] ^ in[5] ^ in[6] ^ in[9] ^ in[12] ^ in[13];
    assign out[9] = in[4] ^ in[6];
    assign out[10] = in[4] ^ in[6] ^ in[9] ^ in[10] ^ in[11] ^ in[13];
    assign out[11] = in[9] ^ in[10] ^ in[12] ^ in[13] ^ in[14];
    assign out[12] = in[2] ^ in[3] ^ in[9] ^ in[14];
    assign out[13] = in[5] ^ in[6] ^ in[7] ^ in[10] ^ in[12];
    assign out[14] = in[3] ^ in[5] ^ in[6] ^ in[11] ^ in[12] ^ in[13];
endmodule

module sc_evaluation_matrix_035(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[3] ^ in[6] ^ in[9] ^ in[12];
    assign out[1] = in[3] ^ in[12] ^ in[13];
    assign out[2] = in[3] ^ in[6] ^ in[12] ^ in[13];
    assign out[3] = in[3] ^ in[5] ^ in[9] ^ in[11] ^ in[13];
    assign out[4] = in[3] ^ in[6] ^ in[9] ^ in[11] ^ in[12] ^ in[13];
    assign out[5] = in[1] ^ in[3] ^ in[4] ^ in[7] ^ in[10] ^ in[12];
    assign out[6] = in[3] ^ in[4] ^ in[6] ^ in[7] ^ in[11] ^ in[12] ^ in[13];
    assign out[7] = in[1] ^ in[3] ^ in[5] ^ in[7] ^ in[9] ^ in[10] ^ in[11] ^ in[13];
    assign out[8] = in[6] ^ in[10] ^ in[12] ^ in[13];
    assign out[9] = in[10] ^ in[12];
    assign out[10] = in[2] ^ in[5] ^ in[6] ^ in[8] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[11] = in[5] ^ in[8] ^ in[10];
    assign out[12] = in[5] ^ in[6] ^ in[10] ^ in[12] ^ in[13] ^ in[14];
    assign out[13] = in[4] ^ in[5] ^ in[8] ^ in[11] ^ in[12];
    assign out[14] = in[2] ^ in[4] ^ in[6] ^ in[8] ^ in[10] ^ in[12] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_036(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[10] ^ in[11] ^ in[13];
    assign out[1] = in[2] ^ in[6] ^ in[9] ^ in[10] ^ in[11] ^ in[12];
    assign out[2] = in[2] ^ in[4] ^ in[6] ^ in[9] ^ in[10] ^ in[11];
    assign out[3] = in[3] ^ in[6] ^ in[8] ^ in[13];
    assign out[4] = in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[11] ^ in[12] ^ in[13];
    assign out[5] = in[3] ^ in[6] ^ in[8] ^ in[12];
    assign out[6] = in[1] ^ in[3] ^ in[8] ^ in[11];
    assign out[7] = in[3] ^ in[11] ^ in[13];
    assign out[8] = in[1] ^ in[3] ^ in[5] ^ in[6] ^ in[8] ^ in[10] ^ in[12] ^ in[13];
    assign out[9] = in[3] ^ in[4] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[10] = in[3] ^ in[4] ^ in[6] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[11] = in[13] ^ in[14];
    assign out[12] = in[2] ^ in[5] ^ in[6] ^ in[7] ^ in[9] ^ in[13] ^ in[14];
    assign out[13] = in[7] ^ in[9] ^ in[12] ^ in[13] ^ in[14];
    assign out[14] = in[6] ^ in[7] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_037(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[11];
    assign out[1] = in[6] ^ in[8] ^ in[11] ^ in[12] ^ in[13];
    assign out[2] = in[5] ^ in[6] ^ in[8] ^ in[11];
    assign out[3] = in[2] ^ in[5] ^ in[6] ^ in[9] ^ in[10] ^ in[12] ^ in[13];
    assign out[4] = in[2] ^ in[6] ^ in[7] ^ in[9] ^ in[11];
    assign out[5] = in[5] ^ in[6] ^ in[11] ^ in[12] ^ in[13];
    assign out[6] = in[3] ^ in[4] ^ in[6] ^ in[9] ^ in[10];
    assign out[7] = in[1] ^ in[3] ^ in[6] ^ in[7] ^ in[11] ^ in[12];
    assign out[8] = in[3] ^ in[4] ^ in[6] ^ in[9] ^ in[14];
    assign out[9] = in[1] ^ in[3] ^ in[5] ^ in[6];
    assign out[10] = in[3] ^ in[6] ^ in[9] ^ in[10] ^ in[11] ^ in[12];
    assign out[11] = in[3] ^ in[6] ^ in[8] ^ in[9] ^ in[10];
    assign out[12] = in[3] ^ in[10] ^ in[11] ^ in[12];
    assign out[13] = in[3] ^ in[4] ^ in[5] ^ in[8] ^ in[11] ^ in[12];
    assign out[14] = in[2] ^ in[4] ^ in[6] ^ in[8] ^ in[14];
endmodule

module sc_evaluation_matrix_038(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[3] ^ in[6] ^ in[9] ^ in[11] ^ in[12];
    assign out[1] = in[2] ^ in[9] ^ in[10] ^ in[12] ^ in[13];
    assign out[2] = in[2] ^ in[3] ^ in[4] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13];
    assign out[3] = in[5] ^ in[6] ^ in[9] ^ in[11] ^ in[12] ^ in[13];
    assign out[4] = in[4] ^ in[5] ^ in[8] ^ in[9] ^ in[11] ^ in[12] ^ in[13];
    assign out[5] = in[2] ^ in[6] ^ in[8] ^ in[10] ^ in[12];
    assign out[6] = in[2] ^ in[6] ^ in[8] ^ in[9] ^ in[11];
    assign out[7] = in[5] ^ in[6] ^ in[11] ^ in[12] ^ in[14];
    assign out[8] = in[1] ^ in[5] ^ in[6] ^ in[8] ^ in[10] ^ in[11] ^ in[12] ^ in[14];
    assign out[9] = in[3] ^ in[6] ^ in[8] ^ in[12];
    assign out[10] = in[1] ^ in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[8] ^ in[11];
    assign out[11] = in[3] ^ in[6] ^ in[7] ^ in[11] ^ in[12];
    assign out[12] = in[3] ^ in[4] ^ in[6] ^ in[9] ^ in[11];
    assign out[13] = in[3] ^ in[6] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[14];
    assign out[14] = in[3] ^ in[5] ^ in[6] ^ in[7] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_039(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[3] ^ in[5] ^ in[6] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13];
    assign out[1] = in[4] ^ in[5] ^ in[8] ^ in[9] ^ in[10] ^ in[11];
    assign out[2] = in[4] ^ in[11];
    assign out[3] = in[2] ^ in[7] ^ in[10] ^ in[12] ^ in[13];
    assign out[4] = in[2] ^ in[5] ^ in[7] ^ in[8] ^ in[10] ^ in[12];
    assign out[5] = in[3] ^ in[5] ^ in[11];
    assign out[6] = in[4] ^ in[7] ^ in[9] ^ in[11] ^ in[14];
    assign out[7] = in[2] ^ in[7] ^ in[12];
    assign out[8] = in[2] ^ in[4] ^ in[5] ^ in[9] ^ in[10] ^ in[12] ^ in[14];
    assign out[9] = in[1] ^ in[5] ^ in[6] ^ in[9] ^ in[10] ^ in[12];
    assign out[10] = in[9] ^ in[11] ^ in[12];
    assign out[11] = in[1] ^ in[6] ^ in[9] ^ in[10] ^ in[11] ^ in[12];
    assign out[12] = in[3] ^ in[5] ^ in[6] ^ in[8] ^ in[9] ^ in[10] ^ in[12] ^ in[13] ^ in[14];
    assign out[13] = in[3] ^ in[5] ^ in[6] ^ in[8] ^ in[9] ^ in[11] ^ in[12] ^ in[13];
    assign out[14] = in[3] ^ in[4] ^ in[6] ^ in[8] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_040(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[3] ^ in[6] ^ in[9] ^ in[12];
    assign out[1] = in[6] ^ in[9] ^ in[11] ^ in[13];
    assign out[2] = in[5] ^ in[6] ^ in[9] ^ in[12] ^ in[13];
    assign out[3] = in[4] ^ in[10] ^ in[11];
    assign out[4] = in[4] ^ in[5] ^ in[12];
    assign out[5] = in[2] ^ in[4] ^ in[5] ^ in[8] ^ in[10] ^ in[14];
    assign out[6] = in[2] ^ in[4] ^ in[5] ^ in[10] ^ in[11] ^ in[14];
    assign out[7] = in[14];
    assign out[8] = in[3] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[14];
    assign out[9] = in[2] ^ in[5] ^ in[8] ^ in[9] ^ in[11];
    assign out[10] = in[1] ^ in[2] ^ in[4] ^ in[5] ^ in[7] ^ in[9] ^ in[10] ^ in[13];
    assign out[11] = in[7] ^ in[10] ^ in[14];
    assign out[12] = in[1] ^ in[4] ^ in[8] ^ in[11] ^ in[14];
    assign out[13] = in[5] ^ in[7] ^ in[10] ^ in[11] ^ in[14];
    assign out[14] = in[5] ^ in[7] ^ in[10] ^ in[14];
endmodule

module sc_evaluation_matrix_041(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[10] ^ in[13];
    assign out[1] = in[4] ^ in[5] ^ in[8] ^ in[12] ^ in[13];
    assign out[2] = in[4] ^ in[7] ^ in[9] ^ in[10] ^ in[11] ^ in[12];
    assign out[3] = in[3] ^ in[5] ^ in[8] ^ in[10] ^ in[11];
    assign out[4] = in[7] ^ in[10] ^ in[11] ^ in[14];
    assign out[5] = in[5] ^ in[7] ^ in[8] ^ in[9] ^ in[10];
    assign out[6] = in[6] ^ in[8] ^ in[11];
    assign out[7] = in[2] ^ in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[10];
    assign out[8] = in[2] ^ in[4] ^ in[6] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[9] = in[4] ^ in[5] ^ in[9] ^ in[13];
    assign out[10] = in[4] ^ in[5] ^ in[9] ^ in[10] ^ in[11] ^ in[14];
    assign out[11] = in[1] ^ in[2] ^ in[3] ^ in[5] ^ in[9];
    assign out[12] = in[2] ^ in[11] ^ in[12];
    assign out[13] = in[1] ^ in[8] ^ in[10];
    assign out[14] = in[4] ^ in[5] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_042(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[10] ^ in[11];
    assign out[1] = in[10] ^ in[11];
    assign out[2] = in[5] ^ in[10] ^ in[11];
    assign out[3] = in[4] ^ in[9] ^ in[11] ^ in[14];
    assign out[4] = in[4] ^ in[5] ^ in[10] ^ in[11] ^ in[14];
    assign out[5] = in[4] ^ in[10] ^ in[11];
    assign out[6] = in[3] ^ in[4] ^ in[5] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[13];
    assign out[7] = in[8] ^ in[11] ^ in[14];
    assign out[8] = in[5] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[9] = in[2] ^ in[7] ^ in[8] ^ in[10] ^ in[11] ^ in[12] ^ in[14];
    assign out[10] = in[2] ^ in[5] ^ in[10] ^ in[11] ^ in[12] ^ in[14];
    assign out[11] = in[4] ^ in[7] ^ in[8] ^ in[9] ^ in[11] ^ in[12];
    assign out[12] = in[1] ^ in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[10] ^ in[12] ^ in[13];
    assign out[13] = in[2] ^ in[4] ^ in[6] ^ in[8] ^ in[10] ^ in[11] ^ in[12] ^ in[14];
    assign out[14] = in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_043(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[1] ^ in[2] ^ in[4] ^ in[5] ^ in[8] ^ in[9] ^ in[10] ^ in[11];
    assign out[1] = in[1] ^ in[5] ^ in[7] ^ in[8] ^ in[9];
    assign out[2] = in[2] ^ in[3] ^ in[5] ^ in[7] ^ in[8] ^ in[10] ^ in[14];
    assign out[3] = in[3] ^ in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[10];
    assign out[4] = in[4] ^ in[5] ^ in[8] ^ in[13] ^ in[14];
    assign out[5] = in[7] ^ in[8] ^ in[9] ^ in[13];
    assign out[6] = in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[12] ^ in[13] ^ in[14];
    assign out[7] = in[4] ^ in[5] ^ in[7] ^ in[10] ^ in[13];
    assign out[8] = in[4] ^ in[8] ^ in[9] ^ in[11];
    assign out[9] = in[3] ^ in[4] ^ in[5] ^ in[9] ^ in[11];
    assign out[10] = in[4] ^ in[13] ^ in[14];
    assign out[11] = in[2] ^ in[5] ^ in[10] ^ in[13];
    assign out[12] = in[2] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[13] = in[1] ^ in[5] ^ in[11] ^ in[13];
    assign out[14] = in[8] ^ in[10] ^ in[11] ^ in[14];
endmodule

module sc_evaluation_matrix_044(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[9];
    assign out[1] = in[1] ^ in[5] ^ in[8] ^ in[9] ^ in[10] ^ in[14];
    assign out[2] = in[1] ^ in[2] ^ in[5] ^ in[8] ^ in[9] ^ in[13] ^ in[14];
    assign out[3] = in[5] ^ in[10] ^ in[12] ^ in[14];
    assign out[4] = in[2] ^ in[4] ^ in[5] ^ in[9] ^ in[11] ^ in[12] ^ in[14];
    assign out[5] = in[3] ^ in[5] ^ in[14];
    assign out[6] = in[3] ^ in[5] ^ in[9] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[7] = in[5] ^ in[8] ^ in[9];
    assign out[8] = in[4] ^ in[5] ^ in[7] ^ in[10] ^ in[11] ^ in[13];
    assign out[9] = in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[12] ^ in[14];
    assign out[10] = in[7] ^ in[8] ^ in[9] ^ in[12] ^ in[14];
    assign out[11] = in[4] ^ in[8] ^ in[14];
    assign out[12] = in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[10] ^ in[13] ^ in[14];
    assign out[13] = in[2] ^ in[4] ^ in[7] ^ in[8] ^ in[10] ^ in[14];
    assign out[14] = in[1] ^ in[2] ^ in[4] ^ in[5] ^ in[7] ^ in[8] ^ in[9] ^ in[14];
endmodule

module sc_evaluation_matrix_045(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[1] = in[1] ^ in[3] ^ in[6] ^ in[8] ^ in[10] ^ in[11] ^ in[13];
    assign out[2] = in[1] ^ in[2] ^ in[5] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[12];
    assign out[3] = in[1] ^ in[5] ^ in[6] ^ in[7] ^ in[9] ^ in[10] ^ in[11];
    assign out[4] = in[2] ^ in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[11] ^ in[13];
    assign out[5] = in[5] ^ in[9] ^ in[10] ^ in[11] ^ in[13];
    assign out[6] = in[2] ^ in[5] ^ in[12] ^ in[13] ^ in[14];
    assign out[7] = in[5] ^ in[7] ^ in[10] ^ in[13];
    assign out[8] = in[3] ^ in[4] ^ in[5] ^ in[8] ^ in[9] ^ in[12] ^ in[14];
    assign out[9] = in[3] ^ in[5] ^ in[8] ^ in[10];
    assign out[10] = in[5] ^ in[8] ^ in[9] ^ in[13];
    assign out[11] = in[5] ^ in[9] ^ in[10] ^ in[13];
    assign out[12] = in[4] ^ in[5];
    assign out[13] = in[5] ^ in[9] ^ in[10];
    assign out[14] = in[5] ^ in[14];
endmodule

module sc_evaluation_matrix_046(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[10] ^ in[11];
    assign out[1] = in[1] ^ in[4] ^ in[8] ^ in[10];
    assign out[2] = in[1] ^ in[2] ^ in[4] ^ in[9] ^ in[10] ^ in[11] ^ in[13];
    assign out[3] = in[1] ^ in[3] ^ in[9] ^ in[10] ^ in[12];
    assign out[4] = in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[8] ^ in[9] ^ in[10] ^ in[12];
    assign out[5] = in[5] ^ in[10] ^ in[12] ^ in[14];
    assign out[6] = in[2] ^ in[6] ^ in[9] ^ in[10] ^ in[12] ^ in[13] ^ in[14];
    assign out[7] = in[5] ^ in[6] ^ in[7] ^ in[9] ^ in[10] ^ in[14];
    assign out[8] = in[2] ^ in[4] ^ in[5] ^ in[8] ^ in[9] ^ in[10] ^ in[13] ^ in[14];
    assign out[9] = in[5] ^ in[6] ^ in[8] ^ in[9] ^ in[10];
    assign out[10] = in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[13];
    assign out[11] = in[3] ^ in[5] ^ in[7] ^ in[9] ^ in[10] ^ in[11];
    assign out[12] = in[3] ^ in[4] ^ in[5] ^ in[9] ^ in[10] ^ in[11] ^ in[12];
    assign out[13] = in[5] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[14] = in[5] ^ in[7] ^ in[9] ^ in[11] ^ in[12] ^ in[13];
endmodule

module sc_evaluation_matrix_047(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[3] ^ in[5] ^ in[6] ^ in[9] ^ in[10] ^ in[12] ^ in[13];
    assign out[1] = in[3] ^ in[4] ^ in[8] ^ in[13];
    assign out[2] = in[1] ^ in[4] ^ in[6] ^ in[7];
    assign out[3] = in[1];
    assign out[4] = in[1] ^ in[2] ^ in[7] ^ in[8] ^ in[9] ^ in[12] ^ in[13] ^ in[14];
    assign out[5] = in[1] ^ in[4] ^ in[9] ^ in[10] ^ in[13];
    assign out[6] = in[2] ^ in[3] ^ in[4] ^ in[7] ^ in[10] ^ in[13];
    assign out[7] = in[3] ^ in[7] ^ in[9] ^ in[11] ^ in[13];
    assign out[8] = in[2] ^ in[4] ^ in[9] ^ in[13] ^ in[14];
    assign out[9] = in[8] ^ in[9] ^ in[10] ^ in[12] ^ in[13];
    assign out[10] = in[2] ^ in[5] ^ in[10] ^ in[12];
    assign out[11] = in[9] ^ in[10] ^ in[12] ^ in[13];
    assign out[12] = in[4] ^ in[5] ^ in[6] ^ in[8] ^ in[9] ^ in[10] ^ in[12] ^ in[14];
    assign out[13] = in[5] ^ in[6] ^ in[9] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[14] = in[3] ^ in[5] ^ in[7] ^ in[10];
endmodule

module sc_evaluation_matrix_048(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[10];
    assign out[1] = in[4] ^ in[5] ^ in[9] ^ in[12];
    assign out[2] = in[3] ^ in[4] ^ in[5] ^ in[8] ^ in[10] ^ in[12] ^ in[13];
    assign out[3] = in[1] ^ in[6] ^ in[8] ^ in[11] ^ in[14];
    assign out[4] = in[1] ^ in[3] ^ in[9] ^ in[10] ^ in[11] ^ in[14];
    assign out[5] = in[1] ^ in[4] ^ in[6] ^ in[8] ^ in[9];
    assign out[6] = in[1] ^ in[2] ^ in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[12];
    assign out[7] = in[7] ^ in[14];
    assign out[8] = in[2] ^ in[6] ^ in[9] ^ in[13] ^ in[14];
    assign out[9] = in[3] ^ in[4] ^ in[7] ^ in[8] ^ in[9] ^ in[11] ^ in[13];
    assign out[10] = in[2] ^ in[3] ^ in[4] ^ in[11] ^ in[12] ^ in[13];
    assign out[11] = in[7] ^ in[13] ^ in[14];
    assign out[12] = in[2] ^ in[4] ^ in[8] ^ in[12] ^ in[13];
    assign out[13] = in[7] ^ in[9] ^ in[13] ^ in[14];
    assign out[14] = in[7] ^ in[9] ^ in[13];
endmodule

module sc_evaluation_matrix_049(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[11] ^ in[13];
    assign out[1] = in[4] ^ in[7] ^ in[11] ^ in[13];
    assign out[2] = in[4] ^ in[7] ^ in[8] ^ in[9] ^ in[14];
    assign out[3] = in[7] ^ in[8] ^ in[12];
    assign out[4] = in[1] ^ in[7] ^ in[9] ^ in[12] ^ in[14];
    assign out[5] = in[1] ^ in[3] ^ in[4] ^ in[5] ^ in[7] ^ in[8] ^ in[11];
    assign out[6] = in[1] ^ in[4] ^ in[5] ^ in[8] ^ in[13] ^ in[14];
    assign out[7] = in[1] ^ in[3] ^ in[5] ^ in[7] ^ in[9] ^ in[11] ^ in[12];
    assign out[8] = in[2] ^ in[12] ^ in[14];
    assign out[9] = in[4] ^ in[6] ^ in[9] ^ in[12];
    assign out[10] = in[2] ^ in[4] ^ in[8] ^ in[9] ^ in[10] ^ in[12] ^ in[14];
    assign out[11] = in[6] ^ in[8] ^ in[14];
    assign out[12] = in[2] ^ in[3] ^ in[6] ^ in[10] ^ in[14];
    assign out[13] = in[3] ^ in[4] ^ in[7] ^ in[8] ^ in[9] ^ in[12] ^ in[13] ^ in[14];
    assign out[14] = in[2] ^ in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[12];
endmodule

module sc_evaluation_matrix_050(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[3] ^ in[6] ^ in[12];
    assign out[1] = in[2] ^ in[6] ^ in[9] ^ in[11] ^ in[14];
    assign out[2] = in[2] ^ in[3] ^ in[4] ^ in[6] ^ in[9] ^ in[11] ^ in[12] ^ in[14];
    assign out[3] = in[8] ^ in[9] ^ in[11] ^ in[14];
    assign out[4] = in[4] ^ in[6] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[5] = in[1] ^ in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[13] ^ in[14];
    assign out[6] = in[1] ^ in[4] ^ in[6] ^ in[8] ^ in[10] ^ in[14];
    assign out[7] = in[1] ^ in[7] ^ in[9] ^ in[10] ^ in[14];
    assign out[8] = in[1] ^ in[3] ^ in[7] ^ in[8] ^ in[10] ^ in[12] ^ in[14];
    assign out[9] = in[4] ^ in[7] ^ in[9] ^ in[10] ^ in[14];
    assign out[10] = in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[7] ^ in[8] ^ in[10] ^ in[11] ^ in[12];
    assign out[11] = in[5] ^ in[7] ^ in[8] ^ in[9] ^ in[13];
    assign out[12] = in[2] ^ in[5] ^ in[7] ^ in[11] ^ in[12] ^ in[13];
    assign out[13] = in[4] ^ in[8] ^ in[9] ^ in[13] ^ in[14];
    assign out[14] = in[2] ^ in[4] ^ in[7] ^ in[8] ^ in[13];
endmodule

module sc_evaluation_matrix_051(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[7] ^ in[10] ^ in[11] ^ in[14];
    assign out[1] = in[2] ^ in[8] ^ in[9] ^ in[11] ^ in[12];
    assign out[2] = in[2] ^ in[4] ^ in[8] ^ in[9] ^ in[12] ^ in[13];
    assign out[3] = in[2] ^ in[3] ^ in[5] ^ in[8] ^ in[9];
    assign out[4] = in[2] ^ in[4] ^ in[9] ^ in[13];
    assign out[5] = in[3] ^ in[7] ^ in[8] ^ in[9] ^ in[12];
    assign out[6] = in[1] ^ in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[12];
    assign out[7] = in[1] ^ in[6] ^ in[7] ^ in[9] ^ in[11] ^ in[12];
    assign out[8] = in[1] ^ in[4] ^ in[6] ^ in[8] ^ in[9] ^ in[11] ^ in[12];
    assign out[9] = in[1] ^ in[4] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[10] = in[4] ^ in[6] ^ in[9] ^ in[12];
    assign out[11] = in[3] ^ in[6] ^ in[8] ^ in[9];
    assign out[12] = in[2] ^ in[6] ^ in[7] ^ in[9] ^ in[11] ^ in[12] ^ in[14];
    assign out[13] = in[3] ^ in[4] ^ in[8] ^ in[11] ^ in[13] ^ in[14];
    assign out[14] = in[2] ^ in[4] ^ in[7] ^ in[8] ^ in[9] ^ in[11] ^ in[12];
endmodule

module sc_evaluation_matrix_052(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[9] ^ in[13];
    assign out[1] = in[2] ^ in[3] ^ in[6] ^ in[8] ^ in[10] ^ in[13];
    assign out[2] = in[2] ^ in[3] ^ in[4] ^ in[8] ^ in[10] ^ in[11] ^ in[12] ^ in[13];
    assign out[3] = in[2] ^ in[9] ^ in[13];
    assign out[4] = in[2] ^ in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[9];
    assign out[5] = in[2] ^ in[5] ^ in[7] ^ in[8];
    assign out[6] = in[2] ^ in[3] ^ in[4] ^ in[7] ^ in[8] ^ in[11];
    assign out[7] = in[1] ^ in[9] ^ in[13];
    assign out[8] = in[1] ^ in[3] ^ in[4] ^ in[5] ^ in[8] ^ in[9] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[9] = in[1] ^ in[8] ^ in[9] ^ in[12] ^ in[14];
    assign out[10] = in[1] ^ in[4] ^ in[8] ^ in[9] ^ in[10] ^ in[12];
    assign out[11] = in[8] ^ in[9] ^ in[12] ^ in[13] ^ in[14];
    assign out[12] = in[4] ^ in[6] ^ in[7] ^ in[9] ^ in[11] ^ in[12] ^ in[13];
    assign out[13] = in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[12] ^ in[14];
    assign out[14] = in[2] ^ in[3] ^ in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[12] ^ in[14];
endmodule

module sc_evaluation_matrix_053(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[13];
    assign out[1] = in[2] ^ in[4] ^ in[8] ^ in[9];
    assign out[2] = in[2] ^ in[3] ^ in[11] ^ in[13];
    assign out[3] = in[2] ^ in[3] ^ in[6] ^ in[11];
    assign out[4] = in[2] ^ in[3] ^ in[4] ^ in[7] ^ in[11];
    assign out[5] = in[2] ^ in[3] ^ in[8] ^ in[10] ^ in[11] ^ in[12] ^ in[13];
    assign out[6] = in[2] ^ in[4] ^ in[6] ^ in[8] ^ in[10];
    assign out[7] = in[2] ^ in[6] ^ in[7] ^ in[13] ^ in[14];
    assign out[8] = in[1] ^ in[2] ^ in[4] ^ in[8] ^ in[11];
    assign out[9] = in[1] ^ in[3] ^ in[8] ^ in[11] ^ in[13] ^ in[14];
    assign out[10] = in[1] ^ in[4] ^ in[5] ^ in[6] ^ in[8] ^ in[14];
    assign out[11] = in[1] ^ in[3] ^ in[7] ^ in[10] ^ in[13] ^ in[14];
    assign out[12] = in[4] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[12] ^ in[14];
    assign out[13] = in[5] ^ in[7] ^ in[8] ^ in[9] ^ in[11] ^ in[13];
    assign out[14] = in[4] ^ in[8] ^ in[12] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_054(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[10] ^ in[11] ^ in[13];
    assign out[1] = in[4] ^ in[5] ^ in[6] ^ in[8] ^ in[13];
    assign out[2] = in[4] ^ in[6] ^ in[10] ^ in[11] ^ in[12];
    assign out[3] = in[2] ^ in[4] ^ in[5] ^ in[7] ^ in[12] ^ in[13];
    assign out[4] = in[2] ^ in[4] ^ in[5] ^ in[8] ^ in[11] ^ in[13];
    assign out[5] = in[2] ^ in[3] ^ in[4] ^ in[8] ^ in[13];
    assign out[6] = in[2] ^ in[3] ^ in[7] ^ in[9] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[7] = in[2] ^ in[3] ^ in[13] ^ in[14];
    assign out[8] = in[2] ^ in[3] ^ in[4] ^ in[8] ^ in[9] ^ in[10] ^ in[13] ^ in[14];
    assign out[9] = in[1] ^ in[2] ^ in[6] ^ in[8] ^ in[11] ^ in[12] ^ in[13];
    assign out[10] = in[1] ^ in[2] ^ in[4] ^ in[9] ^ in[11] ^ in[12] ^ in[13];
    assign out[11] = in[1] ^ in[7] ^ in[12] ^ in[13];
    assign out[12] = in[1] ^ in[3] ^ in[4] ^ in[6] ^ in[12] ^ in[14];
    assign out[13] = in[6] ^ in[8] ^ in[11] ^ in[14];
    assign out[14] = in[3] ^ in[4] ^ in[7] ^ in[8] ^ in[11] ^ in[14];
endmodule

module sc_evaluation_matrix_055(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[3] ^ in[6] ^ in[9] ^ in[11] ^ in[12];
    assign out[1] = in[3] ^ in[4] ^ in[6] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13];
    assign out[2] = in[3] ^ in[4] ^ in[9] ^ in[10] ^ in[11];
    assign out[3] = in[3] ^ in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[11];
    assign out[4] = in[4] ^ in[7] ^ in[9] ^ in[10];
    assign out[5] = in[2] ^ in[4] ^ in[5] ^ in[6] ^ in[9] ^ in[11] ^ in[14];
    assign out[6] = in[2] ^ in[4] ^ in[5] ^ in[7] ^ in[8] ^ in[12];
    assign out[7] = in[2] ^ in[4] ^ in[6] ^ in[7] ^ in[11];
    assign out[8] = in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[8] ^ in[14];
    assign out[9] = in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[8] ^ in[11];
    assign out[10] = in[1] ^ in[2] ^ in[3] ^ in[7] ^ in[10] ^ in[12] ^ in[13];
    assign out[11] = in[1] ^ in[2] ^ in[3] ^ in[14];
    assign out[12] = in[1] ^ in[2] ^ in[4] ^ in[8] ^ in[10];
    assign out[13] = in[1] ^ in[7] ^ in[8] ^ in[11] ^ in[13];
    assign out[14] = in[4] ^ in[12] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_056(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0];
    assign out[1] = in[4] ^ in[8] ^ in[11];
    assign out[2] = in[4] ^ in[7] ^ in[11];
    assign out[3] = in[3] ^ in[4] ^ in[7] ^ in[8] ^ in[11] ^ in[12];
    assign out[4] = in[3] ^ in[4] ^ in[11] ^ in[12] ^ in[14];
    assign out[5] = in[3] ^ in[4] ^ in[7] ^ in[8] ^ in[10] ^ in[11] ^ in[14];
    assign out[6] = in[3] ^ in[4] ^ in[6] ^ in[7] ^ in[10] ^ in[11];
    assign out[7] = in[2] ^ in[4] ^ in[6] ^ in[8] ^ in[10] ^ in[12] ^ in[14];
    assign out[8] = in[2] ^ in[4] ^ in[10] ^ in[12] ^ in[13] ^ in[14];
    assign out[9] = in[2] ^ in[4] ^ in[6] ^ in[8] ^ in[9] ^ in[11] ^ in[13];
    assign out[10] = in[2] ^ in[4] ^ in[5] ^ in[7] ^ in[9] ^ in[11] ^ in[14];
    assign out[11] = in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[12] = in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[9] ^ in[10] ^ in[11];
    assign out[13] = in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[14] = in[1] ^ in[2] ^ in[3] ^ in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_057(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[8] ^ in[10] ^ in[11] ^ in[12];
    assign out[1] = in[1] ^ in[6] ^ in[8];
    assign out[2] = in[2] ^ in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[12];
    assign out[3] = in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[8] ^ in[9] ^ in[11] ^ in[14];
    assign out[4] = in[6] ^ in[7] ^ in[8] ^ in[10] ^ in[12];
    assign out[5] = in[4] ^ in[5] ^ in[7] ^ in[8] ^ in[11] ^ in[14];
    assign out[6] = in[3] ^ in[4] ^ in[6] ^ in[10] ^ in[12] ^ in[13] ^ in[14];
    assign out[7] = in[3] ^ in[4] ^ in[7] ^ in[8];
    assign out[8] = in[3] ^ in[4] ^ in[8] ^ in[12] ^ in[13] ^ in[14];
    assign out[9] = in[2] ^ in[3] ^ in[4] ^ in[7] ^ in[8] ^ in[9] ^ in[12] ^ in[13] ^ in[14];
    assign out[10] = in[2] ^ in[4] ^ in[7] ^ in[10] ^ in[12] ^ in[13];
    assign out[11] = in[2] ^ in[4] ^ in[8] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[12] = in[1] ^ in[2] ^ in[4] ^ in[6] ^ in[7] ^ in[11] ^ in[14];
    assign out[13] = in[1] ^ in[2] ^ in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[11] ^ in[13];
    assign out[14] = in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[11] ^ in[14];
endmodule

module sc_evaluation_matrix_058(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[1] ^ in[2] ^ in[4] ^ in[8];
    assign out[1] = in[7] ^ in[10] ^ in[11] ^ in[12];
    assign out[2] = in[1] ^ in[3] ^ in[10] ^ in[11] ^ in[12] ^ in[14];
    assign out[3] = in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[12] ^ in[14];
    assign out[4] = in[2] ^ in[7] ^ in[8] ^ in[9] ^ in[12] ^ in[13] ^ in[14];
    assign out[5] = in[5] ^ in[6] ^ in[8] ^ in[10] ^ in[12] ^ in[13];
    assign out[6] = in[3] ^ in[6] ^ in[7] ^ in[8] ^ in[10] ^ in[13] ^ in[14];
    assign out[7] = in[4] ^ in[5] ^ in[6] ^ in[8] ^ in[11] ^ in[14];
    assign out[8] = in[5] ^ in[6] ^ in[8];
    assign out[9] = in[3] ^ in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[12] ^ in[14];
    assign out[10] = in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[8] ^ in[10] ^ in[13] ^ in[14];
    assign out[11] = in[2] ^ in[3] ^ in[4] ^ in[7] ^ in[8] ^ in[13];
    assign out[12] = in[2] ^ in[3] ^ in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[12] ^ in[13] ^ in[14];
    assign out[13] = in[1] ^ in[2] ^ in[4] ^ in[8] ^ in[14];
    assign out[14] = in[1] ^ in[2] ^ in[4] ^ in[7] ^ in[10] ^ in[11] ^ in[12] ^ in[14];
endmodule

module sc_evaluation_matrix_059(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[8] ^ in[10] ^ in[12];
    assign out[1] = in[3] ^ in[5] ^ in[7] ^ in[14];
    assign out[2] = in[6] ^ in[7] ^ in[10] ^ in[13];
    assign out[3] = in[1] ^ in[6] ^ in[7] ^ in[11] ^ in[12];
    assign out[4] = in[6] ^ in[11] ^ in[14];
    assign out[5] = in[3] ^ in[7] ^ in[10] ^ in[13] ^ in[14];
    assign out[6] = in[2] ^ in[7] ^ in[9] ^ in[10] ^ in[12];
    assign out[7] = in[7] ^ in[8] ^ in[9] ^ in[12] ^ in[14];
    assign out[8] = in[7] ^ in[8] ^ in[13] ^ in[14];
    assign out[9] = in[3] ^ in[6] ^ in[10] ^ in[12];
    assign out[10] = in[5] ^ in[7] ^ in[10] ^ in[11] ^ in[12] ^ in[14];
    assign out[11] = in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[12] = in[3] ^ in[5] ^ in[6] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[12];
    assign out[13] = in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[11] ^ in[12];
    assign out[14] = in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[6] ^ in[8] ^ in[12] ^ in[14];
endmodule

module sc_evaluation_matrix_060(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[1] = in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[2] = in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10];
    assign out[3] = in[12] ^ in[13] ^ in[14];
    assign out[4] = in[1] ^ in[3] ^ in[5] ^ in[7] ^ in[8] ^ in[10] ^ in[13];
    assign out[5] = in[5] ^ in[7] ^ in[12] ^ in[14];
    assign out[6] = in[5] ^ in[7] ^ in[9] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[7] = in[13];
    assign out[8] = in[2] ^ in[3] ^ in[6] ^ in[7] ^ in[9] ^ in[10] ^ in[14];
    assign out[9] = in[6] ^ in[7] ^ in[13] ^ in[14];
    assign out[10] = in[6] ^ in[7] ^ in[10] ^ in[11] ^ in[13];
    assign out[11] = in[14];
    assign out[12] = in[3] ^ in[7] ^ in[10];
    assign out[13] = in[7] ^ in[14];
    assign out[14] = in[7] ^ in[11] ^ in[14];
endmodule

module sc_evaluation_matrix_061(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[3] ^ in[6] ^ in[7] ^ in[9] ^ in[12] ^ in[14];
    assign out[1] = in[1] ^ in[3] ^ in[9] ^ in[12] ^ in[13] ^ in[14];
    assign out[2] = in[2] ^ in[6] ^ in[9] ^ in[11] ^ in[12] ^ in[14];
    assign out[3] = in[3] ^ in[7] ^ in[9] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[4] = in[4] ^ in[7] ^ in[10] ^ in[12] ^ in[13] ^ in[14];
    assign out[5] = in[1] ^ in[4] ^ in[5] ^ in[10];
    assign out[6] = in[4] ^ in[5] ^ in[6] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[7] = in[3] ^ in[5] ^ in[6] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[8] = in[6] ^ in[7] ^ in[8] ^ in[10];
    assign out[9] = in[5] ^ in[7] ^ in[9] ^ in[13] ^ in[14];
    assign out[10] = in[2] ^ in[5] ^ in[8] ^ in[10] ^ in[11] ^ in[14];
    assign out[11] = in[3] ^ in[5] ^ in[7] ^ in[9] ^ in[14];
    assign out[12] = in[7] ^ in[8] ^ in[10] ^ in[11] ^ in[12] ^ in[14];
    assign out[13] = in[7] ^ in[12] ^ in[13];
    assign out[14] = in[6] ^ in[10] ^ in[13];
endmodule

module sc_evaluation_matrix_062(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[7] ^ in[10] ^ in[14];
    assign out[1] = in[8] ^ in[12] ^ in[13];
    assign out[2] = in[1] ^ in[5] ^ in[7] ^ in[8] ^ in[11] ^ in[12];
    assign out[3] = in[3] ^ in[7] ^ in[8] ^ in[9] ^ in[13];
    assign out[4] = in[2] ^ in[3] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[5] = in[6] ^ in[8] ^ in[9] ^ in[10] ^ in[14];
    assign out[6] = in[1] ^ in[3] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[13];
    assign out[7] = in[7] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[8] = in[4] ^ in[6] ^ in[10] ^ in[11] ^ in[13] ^ in[14];
    assign out[9] = in[4] ^ in[9] ^ in[10] ^ in[11] ^ in[12];
    assign out[10] = in[3] ^ in[4] ^ in[5] ^ in[7] ^ in[9] ^ in[10];
    assign out[11] = in[5] ^ in[7] ^ in[9] ^ in[12] ^ in[13];
    assign out[12] = in[2] ^ in[5] ^ in[6] ^ in[9] ^ in[12] ^ in[14];
    assign out[13] = in[6] ^ in[10] ^ in[11] ^ in[12] ^ in[13];
    assign out[14] = in[3] ^ in[5] ^ in[6] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
endmodule

module sc_evaluation_matrix_063(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0] ^ in[5] ^ in[9] ^ in[10] ^ in[11];
    assign out[1] = in[9] ^ in[11] ^ in[13];
    assign out[2] = in[3] ^ in[7] ^ in[11];
    assign out[3] = in[1] ^ in[3] ^ in[5] ^ in[6] ^ in[9] ^ in[13] ^ in[14];
    assign out[4] = in[5] ^ in[7] ^ in[13];
    assign out[5] = in[14];
    assign out[6] = in[2] ^ in[3] ^ in[6] ^ in[10] ^ in[11] ^ in[12] ^ in[14];
    assign out[7] = in[1] ^ in[3] ^ in[5] ^ in[7] ^ in[9] ^ in[12] ^ in[13];
    assign out[8] = in[10] ^ in[12] ^ in[14];
    assign out[9] = in[3] ^ in[7] ^ in[8] ^ in[11] ^ in[13];
    assign out[10] = in[7] ^ in[8] ^ in[13];
    assign out[11] = in[6] ^ in[8] ^ in[11] ^ in[13] ^ in[14];
    assign out[12] = in[4] ^ in[8] ^ in[9] ^ in[12] ^ in[14];
    assign out[13] = in[3] ^ in[4] ^ in[7] ^ in[8] ^ in[9] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[14] = in[2] ^ in[4] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[12] ^ in[13];
endmodule

module sc_evaluation_matrix_064(in, out);
`include "SC_parameters.vh"
    input wire [14:0] in;
    output wire [`S_OUT_BIT-1:0] out;
    assign out[0] = in[0];
    assign out[1] = in[2] ^ in[3] ^ in[4] ^ in[7] ^ in[9] ^ in[10] ^ in[13];
    assign out[2] = in[2] ^ in[3] ^ in[6] ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[14];
    assign out[3] = in[6] ^ in[7] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[4] = in[1] ^ in[4] ^ in[10] ^ in[14];
    assign out[5] = in[3] ^ in[5] ^ in[6] ^ in[7] ^ in[11] ^ in[13];
    assign out[6] = in[3] ^ in[6] ^ in[9] ^ in[11] ^ in[12] ^ in[13] ^ in[14];
    assign out[7] = in[7] ^ in[11] ^ in[13] ^ in[14];
    assign out[8] = in[1] ^ in[2] ^ in[5] ^ in[8] ^ in[11] ^ in[14];
    assign out[9] = in[3] ^ in[5] ^ in[6] ^ in[7] ^ in[10] ^ in[11] ^ in[12];
    assign out[10] = in[3] ^ in[9] ^ in[11] ^ in[13] ^ in[14];
    assign out[11] = in[7] ^ in[11] ^ in[13];
    assign out[12] = in[3] ^ in[5] ^ in[6] ^ in[9] ^ in[11] ^ in[12];
    assign out[13] = in[11] ^ in[13] ^ in[14];
    assign out[14] = in[7] ^ in[13];
endmodule
